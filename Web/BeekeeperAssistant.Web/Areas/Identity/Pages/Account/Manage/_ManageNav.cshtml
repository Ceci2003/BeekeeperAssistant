@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul>
    <li><a class="icon profile-icon @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Профил</a></li>
    <li><a class="icon email-icon @ManageNavPages.EmailNavClass(ViewContext)" id="email" disabled asp-page="./Email">Имейл</a></li>
    <li><a class="icon password-icon @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Парола</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins"><a id="external-login" class="icon @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    @* <li class="nav-item"><a class="icon @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li> *@
    <li><a class="icon personal-data-icon @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Имформация</a></li>
</ul>
