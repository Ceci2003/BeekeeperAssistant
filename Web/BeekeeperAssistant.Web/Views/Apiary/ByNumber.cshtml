@model BeekeeperAssistant.Web.ViewModels.Apiaries.ApiaryDataViewModel;
@{
    this.ViewData["Title"] = "Информациа за пчелин - №" + Model.Number;
    string hasDevice = "has-device";
    Dictionary<string, string> powerClasses = new Dictionary<string, string>();
    powerClasses.Add("weak", "td-weak");
    powerClasses.Add("medium", "td-medium");
    powerClasses.Add("strong", "td-strong");
}

<div class="breadcrumb">
    <ul class="breadcrumb-list">
        <li class="breadcrumb-item">
            <a asp-controller="Home" asp-action="Index">Начало</a>
        </li>
        <li class="breadcrumb-item">
            <a asp-controller="Apiary" asp-action="All">Пчелини-всички</a>
        </li>
        <li class="breadcrumb-item active">@ViewData["Title"]</li>
    </ul>
    <div class="breadcrumb-leave">
        <form asp-area="Identity" asp-page="/Account/Logout"
            asp-route-returnUrl="@this.Url.Action("Index", "Home", new { area = string.Empty })">
            <button type="submit" class="exit"><i class="fas fa-sign-out-alt"></i></button>
        </form>
    </div>
</div>

<div class="content">
    <h1 class="title-1 view-title">@ViewData["Title"]</h1>
    <div class="data-view">
        <table>
            <tbody>
                <tr>
                    <th scope="row">Номер:</th>
                    <td>@Model.Number</td>
                </tr>
                <tr>
                    <th scope="row">Име:</th>
                    <td>@Model.Name</td>
                </tr>
                <tr>
                    <th scope="row">Вид:</th>
                    <td>@Html.DisplayFor(x => Model.ApiaryType)</td>
                </tr>
                <tr>
                    <th scope="row">Адрес:</th>
                    <td>@Model.Adress</td>
                </tr>
            </tbody>
        </table>
        <div class="data-edit">
            <a class="btn edit" asp-action="Edit" asp-route-id="@Model.Id">Редактирай</a>
            <form asp-controller="Apiary" asp-action="Delete" asp-route-id="@Model.Id">
                <input class="btn delete" type="submit" value="Изтрий" />
            </form>
        </div>
        <div class="weather">
            @if (@Model.ForecastResult == null)
            {
                <div>
                    <p style="font-size: 18px; color: red; text-aline: center;">Населеното място <br>не е намерено;</p>
                </div>
            }
            else
            {
                string imgPath = Model.ForecastResult.WeatherIcon + ".png";
                <div>
                    <div>
                        <p>Температура: @Model.ForecastResult.Temp</p>
                        <p>Влажност @Model.ForecastResult.Humidity</p>
                    </div>
                    <img src="~/img/weather/@imgPath" alt="">
                </div>
            }
        </div>
    </div>

    <h2 class="title-0 left">Кошери</h2>
    <a class="btn beehive-create" asp-controller="Beehive" asp-action="Create" asp-route-id="@Model.Id">
        <i class="fas fa-plus-square pr-2"></i>
        Създайте нов кошер
    </a>
    <table class="data-table">
        <thead>
            <tr>
                <th>Номер</th>
                <th>Вид</th>
                <th>Система</th>
                <th>Сила</th>
                <th>Редактиране</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var beehive in Model.Beehives)
            {
                <tr class="@if (beehive.HasDevice == true) { @hasDevice }">
                    <td class="number">
                        <a href="/Beehive/@beehive.ApiaryNumber/@beehive.Id">@beehive.Number</a>
                    </td>
                    <td>@beehive.BeehiveType</td>
                    <td>@beehive.BeehiveSystem</td>
                    <td class="@powerClasses[beehive.BeehivePower.ToString().ToLower()]">@Html.DisplayFor(x =>
                    beehive.BeehivePower)</td>
                    <td class="edit">
                        <div>
                            @*TODO: Make Web api that bookmarks and use templating engine to generate html*@
                            <a class="mark" href="#"><i class="far fa-bookmark"></i></a>
                            <a class="edit" asp-controller="Beehive" asp-action="Edit" asp-route-id="@beehive.Id">
                                <i class="far fa-edit"></i>
                            </a>
                            <form method="post" id="form-@beehive.Id" asp-controller="Beehive" asp-action="Delete"
                            asp-route-id="@beehive.Id">
                                <button type="submit" class="delete">
                                    <i class="far fa-trash-alt"></i>
                                </button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="table-legend">
        <p>Легенда</p>
        <ul>
            <li class="beehive-with-device">
                <span></span> - кошерът е с апарат
            </li>
        </ul>
    </div>
</div>

<nav>
    <ul class="pagination justify-content-center">
        @if (this.Model.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-route-apiaryNumber="@Model.Number" asp-route="apiaryRoute"
                asp-route-page="@(this.Model.CurrentPage - 1)">Previous</a>
            </li>
        }

        @for (int i = 1; i <= this.Model.PagesCount; i++)
        {
            var active = i == this.Model.CurrentPage ? "active" : string.Empty;
            <li class="page-item @active">
                <a class="page-link" asp-route="apiaryRoute" asp-route-apiaryNumber="@Model.Number"
                asp-route-page="@i">@i</a>
            </li>
        }

        @if (this.Model.CurrentPage == this.Model.PagesCount)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Next</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-route="apiaryRoute" asp-route-apiaryNumber="@Model.Number"
                asp-route-page="@(this.Model.CurrentPage + 1)">Next</a>
            </li>
        }
    </ul>
</nav>