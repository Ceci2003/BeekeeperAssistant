@model BeekeeperAssistant.Web.ViewModels.Beehives.BeehiveDataViewModel
@{
    this.ViewData["Title"] = "Информация за кошер - №" + Model.Number;
}

<div class="breadcrumb">
    <ul class="breadcrumb-list">
        <li class="breadcrumb-item">
            <a asp-controller="Home" asp-action="Index">Начало</a>
        </li>
        <li class="breadcrumb-item">
            <a asp-controller="Beehive" asp-action="All">Кошери-всички</a>
        </li>
        <li class="breadcrumb-item active">@ViewData["Title"]</li>
    </ul>
    <div class="breadcrumb-leave">
        <form asp-area="Identity" asp-page="/Account/Logout"
              asp-route-returnUrl="@this.Url.Action("Index", "Home", new { area = string.Empty })">
            <button type="submit" class="exit"><i class="fas fa-sign-out-alt"></i></button>
        </form>
    </div>
</div>

<div class="content">
    <table>
    </table>
</div>

@Model.Number
<td>@Html.DisplayFor(x => Model.BeehivePower)</td>
<td>@Html.DisplayFor(x => Model.BeehiveSystem)</td>
<td>@Html.DisplayFor(x => Model.BeehiveType)</td>
@Model.Date
@Model.HasDevice
@Model.HasPolenCatcher
@Model.HasPropolisCatcher

<form asp-controller="Beehive" asp-action="Delete" asp-route-data="@Model.Id">
    <button type="submit">Delete</button>
</form>

<a asp-controller="Beehive" asp-action="Edit">Edit Beehive</a>

@if (!Model.HasQueen)
{
    <a asp-controller="Queen" asp-action="Create" asp-route-id="@Model.Id">Create queen</a>
}

